{"version":3,"sources":["my-utils/Loading.js","PointViewer.js","my-utils/csvParser.js","DataUploader.js","inputs/IconButton/IconButton.js","SavedData.js","inputs/RangeInput/RangeInput.js","FilterData.js","inputs/Button/Button.js","PlotAdder.js","inputs/CircleButton/CircleButton.js","ActionSelector.js","reducers/actions.js","JCtrl.js","my-utils/Axis.js","Point.js","JPlot.js","App.js","reducers/userConfig.js","my-utils/dataSetAPI.js","reducers/dataSet.js","reducers/index.js","registerServiceWorker.js","migrations/index.js","index.js"],"names":["message","PointViewer","selectedPoint","keys","Object","className","map","key","lineParser","acc","curr","lineNumber","line","split","headers","datum","forEach","entry","index","result","push","VALID_TYPES","extension","types","parseData","contents","type","JSON","parse","e","reduce","csvParser","saveDataSet","setChartData","multiple","onChange","target","files","call","file","idx","fileName","name","reader","FileReader","some","search","indexOf","isValidFileType","onload","data","readAsText","IconButton","icon","size","rest","style","width","height","lineHeight","fontSize","savedDataSets","deleteDataSet","savedData","onClick","DataUploader","min","max","lowerBound","upperBound","step","Math","round","resizerWidth","scale","startWidth","endWidth","middleWidth","value","flexBasis","plots","metrics","metricBounds","updateMetricBounds","optionsMap","metric","RangeInput","newBounds","Button","styles","display","onKeyUp","keyCode","tabIndex","button","marginLeft","marginRight","PlotAdder","Component","constructor","super","this","state","handleFieldChange","setState","selectedField","submit","event","preventDefault","props","addPlot","validMetrics","render","onSubmit","htmlFor","CircleButton","isActive","fontIcon","aria-hidden","USER_ACTIONS","ActionSelector","action","setAction","actions","ADD_PLOT","DEL_PLOT","SET_MODE","SELECT_POINT","FOCUS_POINT","UPDATE_METRIC_BOUNDS","SAVE_DATA_SET","SET_DATA_SET","DEL_DATA_SET","delPlot","field","setDataSet","selectPoint","point","focusPoint","Header","id","getAgentOnChange","first_name","Action","loading","mode","focusedPoint","Loading","SavedData","FilterData","connect","dataSet","userConfig","dispatch","setMode","bounds","Axis","componentDidUpdate","renderAxis","componentDidMount","node","ReactDOM","findDOMNode","d3Select","axis","stroke","transform","Point","isHover","cx","randX","getOpacity","opacity","isFocusedPoint","isSelectedPoint","hoverMenu","radius","plotWidth","floor","random","getFill","isOutOfRange","colors","selected","selectedDisabled","enabled","disabled","getStroke","getStrokeWidth","cy","r","bmi","fillOpacity","strokeWidth","onMouseEnter","onMouseLeave","onPointClick","fill","config","margin","top","side","svgStyle","padding","borderTop","borderBottom","offset","window","innerHeight","JitterPlot","d3Max","d","d3Min","yScale","d3ScaleLinear","domain","range","includes","d3ScaleTime","getY","val","renderFooter","selectedPointId","spIdx","sort","a","b","currentId","position","length","percentile","hasData","renderHeader","renderBody","tickValues","yAxis","d3AxisRight","primary","person","defaultProps","App","chartData","SAMPLE_SETS","src","fetch","then","raw","json","drillIntoPoint","console","log","selectedDataSet","JPlot","initialUserConfig","PRIMARY_COLOR_CHANGE","storage","localStorage","initialDataSet","filter","plot","setItem","stringify","saveData","removeItem","getItem","getData","isNaN","initialState","configOpen","__version","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","addUserConfig","store","assign","isolateDataSetData","savedDataSetsLS","migrate","createStore","SHOW_CONFIG","UPDATE_PRIMARY_COLOR_DEFAULT","userConfigReducer","dataSetReducer","savedStore","reHydrateStore","applyMiddleware","getState","next","document","getElementById","URL","process","origin","addEventListener","response","status","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.07c30c3b.chunk.js","sourcesContent":["import React from 'react';\n\nexport default (message='Loading') => {\n    return (\n        <h1>{message}</h1>\n    );\n};\n","import React from 'react';\nimport './PointViewer.scss';\n\nconst PointViewer = ({ selectedPoint }) => {\n  const keys = Object.keys(selectedPoint);\n  return (\n    <div className='point-card'>\n      {keys.map(key => (\n        <div key={key}>{`${key}: ${selectedPoint[key]}`}</div>\n      ))}\n    </div>\n  );\n};\n\nexport default PointViewer;\n","const lineParser = (acc, curr, lineNumber) => {\n    const line = curr.split(',');\n    if (lineNumber === 0) {\n        acc.headers = line;\n    } else {\n        const datum = {};\n        line.forEach( (entry,index) => {\n            datum[acc.headers[index]] = entry;\n        });\n        acc.result.push(datum)\n    }\n    return acc;\n};\n\nexport default (contents='') =>\n    contents\n        .split(/[\\r\\n]+/g)\n        .reduce(lineParser, { headers: [], result: [] })\n        .result;\n","import React from 'react';\n\nimport csvParser from './my-utils/csvParser';\n\nconst VALID_TYPES = [{\n    extension: '.json',\n    types: ['application/json']\n},{\n    extension: '.csv',\n    types: ['text/csv', 'application/vnd.ms-excel']\n}];\n\nconst isValidFileType = ({\n    name,\n    type\n}) => VALID_TYPES.some( ({\n    extension,\n    types\n}) =>\n    name.search(`${extension}$`) !== -1 && types.indexOf(type) !== -1\n);\n\nconst parseData = (contents,type) => {\n    switch (type) {\n        case 'application/json':\n            try {\n                return JSON.parse(contents);\n            } catch (e) {\n                return false;\n            }\n        case 'text/csv':\n        case 'application/vnd.ms-excel':\n            try {\n                return csvParser(contents);\n            } catch (e) {\n                return false;\n            }\n        default:\n            return false;\n    }\n};\n\nexport default ({\n    saveDataSet,\n    setChartData,\n}) => <div>\n    <h3>Upload Data</h3>\n    <input\n        type='file'\n        multiple\n        onChange={ ({target: { files } }) => {\n            [].forEach.call(files, (file,idx) => {\n                const fileName = file.name;\n                const reader = new FileReader();\n                if (isValidFileType(file)) {\n                    reader.onload = ({target: { result }}) => {\n                        const data = parseData(result, file.type);\n                        if (data === false) {\n                            // TODO: handle bad data type\n                        } else {\n                            saveDataSet(fileName, data);\n                            if (idx === 0) {\n                                setChartData(fileName);\n                            }\n                        }\n                    };\n                    reader.readAsText(file);\n                } else {\n                    //TODO: handle bad file type\n                }\n            });\n        }}\n        name=\"chartData\" />\n</div>\n","import React from \"react\"\nimport \"./iconButton.scss\"\n\nexport default function IconButton({ icon, size = 20, ...rest }) {\n  return (\n    <i\n      {...rest}\n      className={`fa fa-${icon} icon-button`}\n      style={{\n        width: `${size}px`,\n        height: `${size}px`,\n        lineHeight: `${size}px`,\n        fontSize: `${size}px`\n      }}\n    ></i>\n  )\n}\n","import React from 'react';\nimport DataUploader from './DataUploader';\nimport IconButton from './inputs/IconButton/IconButton';\nimport './savedData.scss';\n\nexport default ({\n    // state\n    savedDataSets,\n    // actions\n    saveDataSet,\n    setChartData,\n    deleteDataSet\n}) => <div>\n    <h3>Saved Data</h3>\n    <ul>\n    {savedDataSets.map( savedData => (\n        <li className=\"saved-data-set\" key={savedData}>\n            {/* TODO: radio inputs here, with htmlFor props on span(which should be label) */}\n            <span\n                className=\"saved-data-set__title\"\n                onClick={ () => setChartData(savedData) } >\n                {savedData}\n            </span>\n            <span onClick={ () => deleteDataSet(savedData) }>\n                <IconButton icon='times-circle' />\n            </span>\n        </li>\n    ))}\n    </ul>\n    <DataUploader\n        saveDataSet={ saveDataSet }\n        setChartData={ setChartData } />\n</div>\n","import React from 'react';\nimport './rangeInput.scss';\n\nexport default ({\n    min,\n    max,\n    lowerBound,\n    upperBound,\n    onChange,\n    step = Math.round((max - min) / 10),\n    resizerWidth = 10\n}) => {\n    const scale = 100/(max-min);\n    const startWidth = (lowerBound-min)*scale;\n    const endWidth = (max-upperBound)*scale;\n    const middleWidth = (upperBound-lowerBound)*scale;\n    return <div className=\"range__container\">\n        <div className=\"range__inputs\">\n            <input\n                type='number'\n                onChange={ e => onChange({\n                    lowerBound: +e.target.value,\n                    upperBound\n                })}\n                step={step}\n                value={lowerBound}\n                max={Math.min(max, upperBound)}\n                min={min}/>\n            <input\n                type='number'\n                onChange={ e => onChange({\n                    upperBound: +e.target.value,\n                    lowerBound\n                })}\n                step={step}\n                value={upperBound}\n                max={max}\n                min={Math.max(min, lowerBound)}/>\n        </div>\n        <div className='range__slider'>\n            <div\n                className='range__chunk range__chunk--start'\n                style={{flexBasis: `${startWidth}%`}}></div>\n            <div\n                className='range__control'\n                style={{flexBasis: `${resizerWidth}px`}}></div>\n            <div\n                className='range__chunk range__chunk--middle'\n                style={{flexBasis: `calc(${middleWidth}% - ${2*resizerWidth}px`}}></div>\n            <div\n                className='range__control'\n                style={{flexBasis: `${resizerWidth}px`}}></div>\n            <div\n                className='range__chunk range__chunk--end'\n                style={{flexBasis: `${endWidth}%`}}></div>\n        </div>\n    </div>\n}\n","import React from 'react';\nimport RangeInput from './inputs/RangeInput/RangeInput';\n\nexport default ({\n    data,\n    plots: metrics,\n    metricBounds,\n    updateMetricBounds\n}) => {\n    const optionsMap = {};\n    data.forEach( datum => {\n        metrics.forEach( metric => {\n            if (!optionsMap[metric]) {\n                optionsMap[metric] = {\n                    min: datum[metric],\n                    max: datum[metric]\n                };\n            } else if (datum[metric] < optionsMap[metric].min) {\n                optionsMap[metric].min = datum[metric];\n            } else if (datum[metric] > optionsMap[metric].max) {\n                optionsMap[metric].max = datum[metric];\n            }\n        });\n    });\n    return <div>\n        <h2>Filter Data</h2>\n        {metrics.map( metric => <div key={metric}>\n            <label>{`${metric} : ${optionsMap[metric].min} - ${optionsMap[metric].max}`}</label><br/>\n            <RangeInput\n                min={optionsMap[metric].min}\n                max={optionsMap[metric].max}\n                lowerBound={metricBounds[metric].lowerBound}\n                upperBound={metricBounds[metric].upperBound}\n                onChange={ newBounds => updateMetricBounds(metric, newBounds)}\n            />\n        </div>)}\n    </div>\n};\n","import React from 'react';\nimport './button.scss'\n\nconst Button = ({\n  styles,\n  onClick,\n  display\n}) =>\n  <button\n    onClick={onClick}\n    onKeyUp={ e => {\n      if (e.keyCode === 13 || e.keyCode === 32) {\n        onClick(e);\n      }\n    }}\n    tabIndex='0'\n    style={styles}\n    className='button'>\n    <span>{display}</span>\n  </button>\n\nexport default Button;\n","import React, { Component } from 'react';\n\nimport Button from './inputs/Button/Button';\n\nconst styles = {\n    button: {\n       marginLeft: \"auto\",\n       marginRight: \"auto\"\n    }\n};\n\nclass PlotAdder extends Component {\n\n    constructor() {\n        super();\n\n        this.state = {};\n    }\n\n    handleFieldChange({target: {value}}) {\n        this.setState({\n            selectedField: value\n        });\n    }\n\n    submit(event) {\n        event.preventDefault();\n        this.props.addPlot( this.state.selectedField ?\n            this.state.selectedField :\n            this.props.validMetrics[0]\n        );\n    }\n\n\n    render() {\n      return (\n        <div>\n            <h3>Add Plot</h3>\n            <form onSubmit={ e => this.submit(e) }>\n                <label htmlFor='field'>Field</label>    \n                <select onChange={ e => this.handleFieldChange(e) } >\n                    {\n                        this.props.validMetrics.map( metric => (\n                            <option\n                                name='field'\n                                value={metric}\n                                key={metric}>\n                                {metric}\n                            </option>\n                        ))\n                    }\n                </select>\n                <br />\n                <Button\n                    styles={styles.button}\n                    type='submit'\n                    display='Add'\n                    onClick={ e => this.submit(e) } />\n            </form>\n        </div>\n      );\n    }\n}\n\nexport default PlotAdder;\n","import React from \"react\"\nimport \"./circleButton.scss\"\n\nexport default function CircleButton({\n  onClick,\n  isActive,\n  fontIcon = \"circle\"\n}) {\n  return (\n    <button className='circle-button' onClick={onClick}>\n      <span className={isActive ? \"active\" : \"\"}>\n        <i className={`fa fa-${fontIcon}`} aria-hidden='true'></i>\n      </span>\n    </button>\n  )\n}\n","import React from \"react\"\nimport CircleButton from \"./inputs/CircleButton/CircleButton\"\n\nexport const USER_ACTIONS = {\n  VIEW_SAVED: \"viewSaved\",\n  VIEW_DETAILS: \"viewDetails\",\n  ADD_PLOT: \"addPlot\",\n  FILTER_DATA: \"filterData\"\n}\n\nexport default function ActionSelector({ action, setAction }) {\n  return (\n    <div className='actionSelector'>\n      <CircleButton\n        onClick={() => setAction(USER_ACTIONS.FILTER_DATA)}\n        isActive={action === USER_ACTIONS.FILTER_DATA}\n        fontIcon='filter'\n      />\n      <CircleButton\n        onClick={() => setAction(USER_ACTIONS.VIEW_SAVED)}\n        isActive={action === USER_ACTIONS.VIEW_SAVED}\n        fontIcon='floppy-o'\n      />\n      <CircleButton\n        onClick={() => setAction(USER_ACTIONS.VIEW_DETAILS)}\n        isActive={action === USER_ACTIONS.VIEW_DETAILS}\n        fontIcon='id-card'\n      />\n      <CircleButton\n        onClick={() => setAction(USER_ACTIONS.ADD_PLOT)}\n        isActive={action === USER_ACTIONS.ADD_PLOT}\n        fontIcon='plus'\n      />\n    </div>\n  )\n}\n","const actions = {\n  ADD_PLOT: \"ADD_PLOT\",\n  DEL_PLOT: \"DEL_PLOT\",\n  SET_MODE: \"SET_MODE\",\n  SELECT_POINT: \"SELECT_POINT\",\n  FOCUS_POINT: \"FOCUS_POINT\",\n  UPDATE_METRIC_BOUNDS: \"UPDATE_METRIC_BOUNDS\",\n  // data set actions\n  SAVE_DATA_SET: \"SAVE_DATA_SET\",\n  SET_DATA_SET: \"SET_DATA_SET\",\n  DEL_DATA_SET: \"DEL_DATA_SET\"\n}\n\nexport const addPlot = metric => ({\n  type: actions.ADD_PLOT,\n  data: metric\n})\n\nexport const delPlot = field => ({\n  type: actions.DEL_PLOT,\n  data: field\n})\n\nexport const setMode = mode => ({\n  type: actions.SET_MODE,\n  data: mode\n})\n\nexport const saveDataSet = (name, data) => ({\n  type: actions.SAVE_DATA_SET,\n  data: {\n    name,\n    data\n  }\n})\n\nexport const deleteDataSet = dataSet => ({\n  type: actions.DEL_DATA_SET,\n  data: dataSet\n})\n\nexport const setDataSet = data => ({\n  type: actions.SET_DATA_SET,\n  data\n})\n\nexport const selectPoint = point => ({\n  type: actions.SELECT_POINT,\n  data: point\n})\n\nexport const focusPoint = point => ({\n  type: actions.FOCUS_POINT,\n  data: point\n})\n\nexport const updateMetricBounds = (metric, data) => ({\n  type: actions.UPDATE_METRIC_BOUNDS,\n  data: {\n    bounds: data,\n    metric\n  }\n})\n\nexport default actions\n","import React from \"react\"\n\nimport Loading from \"./my-utils/Loading\"\nimport PointViewer from \"./PointViewer\"\nimport SavedData from \"./SavedData\"\nimport FilterData from \"./FilterData\"\nimport PlotAdder from \"./PlotAdder\"\nimport ActionSelector, { USER_ACTIONS } from \"./ActionSelector\"\nimport \"./j-ctrl.scss\"\n\nimport { connect } from \"react-redux\"\nimport {\n  addPlot,\n  delPlot,\n  setMode,\n  saveDataSet,\n  setDataSet,\n  deleteDataSet,\n  selectPoint,\n  focusPoint,\n  updateMetricBounds\n} from \"./reducers/actions\"\n\nconst JCtrl = props => (\n  <div className='jp-ctrl'>\n    <Header {...props} />\n    <hr />\n    <Action {...props} />\n    <ActionSelector action={props.mode} setAction={props.setMode} />\n  </div>\n)\n\nfunction Header({ selectedPoint, selectPoint, data, validMetrics }) {\n  return (\n    <div className='jp-ctrl__header'>\n      <label htmlFor='agent'>Agent</label>\n      <select\n        name='agent'\n        value={selectedPoint.id}\n        onChange={getAgentOnChange(data, selectPoint)}\n      >\n        {data.map(point => (\n          <option key={point.id} value={point.id}>\n            {point.name || point.first_name || point[validMetrics[0]]}\n          </option>\n        ))}\n      </select>\n    </div>\n  )\n}\n\nconst getAgentOnChange = (data, selectPoint) => event => {\n  const id = +event.target.value\n  let point\n  data.some(data => {\n    if (data.id === id) {\n      point = data\n    }\n    return point\n  })\n  selectPoint(point)\n}\n\nfunction Action({\n  loading,\n  mode,\n  validMetrics,\n  addPlot,\n  deleteDataSet,\n  saveDataSet,\n  setDataSet,\n  data,\n  savedDataSets,\n  metricBounds,\n  updateMetricBounds,\n  focusedPoint,\n  selectedPoint,\n  plots\n}) {\n  if (loading) {\n    return <Loading />\n  }\n  switch (mode) {\n    case USER_ACTIONS.ADD_PLOT:\n      return (\n        <PlotAdder\n          validMetrics={validMetrics}\n          addPlot={metric => addPlot(metric)}\n        />\n      )\n    case USER_ACTIONS.VIEW_SAVED:\n      return (\n        <SavedData\n          savedDataSets={savedDataSets}\n          saveDataSet={saveDataSet}\n          deleteDataSet={deleteDataSet}\n          setChartData={setDataSet}\n        />\n      )\n    case USER_ACTIONS.FILTER_DATA:\n      return (\n        <FilterData\n          data={data}\n          plots={plots}\n          metricBounds={metricBounds}\n          updateMetricBounds={updateMetricBounds}\n        />\n      )\n    case USER_ACTIONS.VIEW_DETAILS:\n      return (\n        <PointViewer\n          focusedPoint={focusedPoint}\n          selectedPoint={selectedPoint}\n        />\n      )\n    default:\n      return <div>Unknown mode</div>\n  }\n}\n\nconst mapStateToProps = ({\n  mode,\n  dataSet: {\n    plots,\n    validMetrics,\n    data,\n    selectedPoint,\n    focusedPoint,\n    metricBounds,\n    savedDataSets\n  },\n  loading,\n  userConfig\n}) => ({\n  mode,\n  plots,\n  validMetrics,\n  metricBounds,\n  savedDataSets,\n  data,\n  selectedPoint,\n  focusedPoint,\n  loading,\n  userConfig\n})\n\nconst mapDispatchToProps = dispatch => ({\n  addPlot: metric => {\n    dispatch(addPlot(metric))\n  },\n  delPlot: metric => {\n    dispatch(delPlot(metric))\n  },\n  setMode: mode => {\n    dispatch(setMode(mode))\n  },\n  saveDataSet: (name, data) => {\n    dispatch(saveDataSet(name, data))\n  },\n  setDataSet: data => {\n    dispatch(setDataSet(data))\n  },\n  deleteDataSet: dataSet => {\n    dispatch(deleteDataSet(dataSet))\n  },\n  selectPoint: point => {\n    dispatch(selectPoint(point))\n  },\n  focusPoint: point => {\n    dispatch(focusPoint(point))\n  },\n  updateMetricBounds: (metric, data) => {\n    dispatch(updateMetricBounds(metric, data))\n  }\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(JCtrl)\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { select  as d3Select } from 'd3';\n\nclass Axis extends Component {\n  componentDidUpdate() {\n    this.renderAxis();\n  }\n  componentDidMount() {\n    this.renderAxis();\n  }\n  renderAxis() {\n    var node = ReactDOM.findDOMNode(this);\n    d3Select(node)\n      .call(this.props.axis);\n  }\n  render() {\n    return (\n      <g\n        className='axis gray-stroke'\n        stroke='grey'\n        transform={'translate(0, 0)'}>\n      </g>\n    );\n  }\n}\n\nexport default Axis;\n","import React, { Component } from 'react';\n\nclass Point extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isHover: false,\n      cx: this.randX()\n    };\n\n  }\n\n  getOpacity() {\n    let opacity;\n    if (this.props.isFocusedPoint || (this.state && this.state.isHover)) {\n      opacity = 1;\n    } else if (this.props.isSelectedPoint) {\n      opacity = 0.8;\n    } else {\n      opacity = 0.6;\n    }\n    return opacity;\n  }\n\n  hoverMenu(isHover) {\n    this.setState({\n      isHover\n    });\n  }\n\n  randX() {\n    const {\n      isSelectedPoint,\n      radius,\n      plotWidth\n    } = this.props;\n    if (isSelectedPoint) {\n      return 150;\n    } else {\n      return Math.floor(Math.random() * (plotWidth-radius/2)) + radius/2;\n    }\n  }\n\n  getFill() {\n    const {\n      isOutOfRange,\n      isSelectedPoint,\n      colors: {\n        selected = '#db4437',\n        selectedDisabled = '#d5dc7e',\n        enabled = '#4285f4',\n        disabled = 'lightgray'\n      } = {}\n    } = this.props;\n\n    if (isOutOfRange) {\n      if (isSelectedPoint) {\n        return selectedDisabled;\n      } else {\n        return disabled;\n      }\n    } else {\n      if (isSelectedPoint) {\n        return selected;\n      } else {\n        return enabled;\n      }\n    }\n  }\n\n  getStroke() {\n    let stroke;\n    if (this.props.isFocusedPoint) {\n      stroke = \"white\";\n    } else if (this.state.isHover) {\n      stroke = \"black\";\n    }\n    return stroke;\n  }\n\n  getStrokeWidth() {\n    if (this.props.isFocusedPoint || this.state.isHover) { return 1; }\n  }\n\n  render() {\n    return (\n      <circle\n        cx={this.state.cx}\n        cy={this.props.cy}\n        r={this.props.radius}\n        data={this.props.data.bmi}\n        fillOpacity={this.getOpacity()}\n        stroke={this.getStroke()}\n        strokeWidth={this.getStrokeWidth()}\n        onMouseEnter={ e => this.hoverMenu(true)}\n        onMouseLeave={ e => this.hoverMenu(false)}\n        onClick={ () => this.props.onPointClick() }\n        fill={this.getFill()} />\n    );\n  }\n}\n\nexport default Point;\n","import React, { Component } from \"react\"\nimport PropTypes from \"prop-types\"\nimport Axis from \"./my-utils/Axis\"\nimport Point from \"./Point\"\nimport {\n  max as d3Max,\n  min as d3Min,\n  scaleLinear as d3ScaleLinear,\n  scaleTime as d3ScaleTime,\n  axisRight as d3AxisRight\n} from \"d3\"\nimport \"./j-plot.scss\"\n\nconst plotHeight = [\n  30, // dashboardTitle\n  25, // plotTitle\n  100, // plotFooter\n  96 // fudge factor\n].reduce((height, offset) => height - offset, window.innerHeight)\n\nconst config = {\n  radius: 10,\n  margin: {\n    top: 10,\n    side: 10\n  },\n  svgStyle: {\n    padding: \"10px\",\n    borderTop: \"2px solid\",\n    borderBottom: \"2px solid\"\n  },\n  height: plotHeight,\n  width: 300\n}\n\nclass JitterPlot extends Component {\n  constructor(props) {\n    super(props)\n\n    // set state\n    const { metric, data } = this.props\n    const max = d3Max(data, d => Math.round(d[metric]))\n    const min = d3Min(data, d => Math.round(d[metric]))\n    let yScale = d3ScaleLinear()\n      .domain([min, max])\n      .range([config.height - config.margin.top, 0])\n\n    if (metric.includes(\"date\") || metric.includes(\"day\")) {\n      yScale = d3ScaleTime().range([config.height - config.margin.top, min])\n    }\n\n    this.state = {\n      yScale,\n      max,\n      min\n    }\n  }\n\n  getY(val) {\n    return this.state.yScale(val)\n  }\n\n  isSelectedPoint({ id }) {\n    return this.props.selectedPoint.id === id\n  }\n\n  renderFooter() {\n    const {\n      selectedPoint: { id: selectedPointId },\n      data,\n      metric\n    } = this.props\n\n    let spIdx = -1\n    data\n      .sort((a, b) => {\n        return Math.round(a[metric]) - Math.round(b[metric])\n      })\n      .some(({ id: currentId }, idx) => {\n        if (currentId === selectedPointId) {\n          spIdx = idx + 1\n        }\n        return spIdx !== -1\n      })\n    const position = `${spIdx} of ${data.length}`\n    const percentile =\n      \"Percentile: \" + Math.round((spIdx / data.length) * 100) + \"%\"\n\n    const hasData = data.length !== 0\n\n    return (\n      <div className='j-plot__footer'>\n        <h3>{hasData ? position : \"\"}</h3>\n        {hasData && <h4>{percentile}</h4>}\n      </div>\n    )\n  }\n\n  renderHeader() {\n    const { metric, data } = this.props\n    return (\n      <h2 className='j-plot__header'>{data.length ? metric : \"No Data\"}</h2>\n    )\n  }\n\n  renderBody() {\n    const {\n      metric,\n      data,\n      metricBounds,\n      focusedPoint,\n      onPointClick,\n      userConfig\n    } = this.props\n    const { max, min, yScale } = this.state\n\n    const tickValues = [min]\n    if (metricBounds.lowerBound !== min) {\n      tickValues.push(metricBounds.lowerBound)\n    }\n    if (\n      metricBounds.upperBound !== max &&\n      metricBounds.upperBound !== metricBounds.lowerBound\n    ) {\n      tickValues.push(metricBounds.upperBound)\n    }\n    if (metricBounds.lowerBound !== max) {\n      tickValues.push(max)\n    }\n\n    const yAxis = d3AxisRight(yScale).tickValues(tickValues)\n\n    const colors = {\n      selected: userConfig.colors.primary\n    }\n\n    return data.length ? (\n      <svg width={config.width} height={config.height} style={config.svgStyle}>\n        <g>\n          <Axis height={config.height - config.margin.top} axis={yAxis} />\n          {data.map(person => (\n            <Point\n              colors={colors}\n              key={person.id}\n              cy={this.getY(Math.round(person[metric]))}\n              radius={config.radius}\n              isFocusedPoint={focusedPoint === person}\n              isSelectedPoint={this.isSelectedPoint(person)}\n              isOutOfRange={\n                metricBounds.lowerBound > person[metric] ||\n                metricBounds.upperBound < person[metric]\n              }\n              onPointClick={() => onPointClick(person)}\n              plotWidth={config.width}\n              data={person}\n            />\n          ))}\n        </g>\n      </svg>\n    ) : (\n      <div\n        style={{\n          width: config.width,\n          height: config.height\n        }}\n      />\n    )\n  }\n\n  render() {\n    return (\n      <div className='j-plot'>\n        {this.renderHeader()}\n        {this.renderBody()}\n        {this.renderFooter()}\n      </div>\n    )\n  }\n}\n\nJitterPlot.propTypes = {\n  data: PropTypes.array,\n  metric: PropTypes.string,\n  selectedPoint: PropTypes.shape({\n    id: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n  }),\n  metricBounds: PropTypes.shape({\n    upperBound: PropTypes.number,\n    lowerBound: PropTypes.number\n  })\n}\n\nJitterPlot.defaultProps = {\n  data: [],\n  metric: \"\",\n  selectedPoint: {},\n  metricBounds: {}\n}\n\nexport default JitterPlot\n","import React, { Component } from \"react\"\n\nimport JCtrl from \"./JCtrl\"\nimport JPlot from \"./JPlot\"\nimport \"./App.scss\"\nimport { connect } from \"react-redux\"\nimport {\n  delPlot,\n  setDataSet,\n  selectPoint,\n  focusPoint,\n  saveDataSet\n} from \"./reducers/actions\"\n\nclass App extends Component {\n  componentDidMount() {\n    const {\n      // state\n      data: chartData,\n      savedDataSets,\n      // actions\n      saveDataSet,\n      setDataSet\n    } = this.props\n\n    const SAMPLE_SETS = [\n      { name: \"Random People 1\", src: \"./MOCK_DATA_1.json\" },\n      { name: \"Random People 2\", src: \"./MOCK_DATA_2.json\" },\n      {\n        name: \"Chicago Gas Stations\",\n        src:\n          \"https://data.cityofchicago.org/resource/f7f2-ggz5.json?$limit=100&$offset=100\"\n      }\n    ]\n    if (savedDataSets.length === 0) {\n      SAMPLE_SETS.forEach((dataSet, index) => {\n        fetch(dataSet.src)\n          .then(raw => raw.json())\n          .then(data => {\n            saveDataSet(dataSet.name, data)\n            if (index === 0 && chartData.length === 0) {\n              setDataSet(dataSet.name)\n            }\n          })\n      })\n    }\n  }\n\n  onPointClick(point) {\n    if (point.id === this.props.selectedPoint.id) {\n      this.drillIntoPoint(point)\n    } else if (point.id === this.props.focusedPoint.id) {\n      this.props.selectPoint(point)\n    } else {\n      this.props.focusPoint(point)\n    }\n  }\n\n  drillIntoPoint(point) {\n    console.log(\"todo: drill into point\")\n  }\n\n  render() {\n    const {\n      selectedPoint,\n      selectedDataSet,\n      plots,\n      data,\n      delPlot,\n      metricBounds,\n      focusedPoint,\n      userConfig\n    } = this.props\n    return (\n      <div className='app-container'>\n        <JCtrl />\n        <div className='app-container__jp-holder'>\n          <h3 className='app-container__jp-title'>{selectedDataSet}</h3>\n          {plots.map((metric, idx) => (\n            <JPlot\n              userConfig={userConfig}\n              key={idx + metric}\n              selectedPoint={selectedPoint}\n              onPointClick={point => this.onPointClick(point)}\n              focusedPoint={focusedPoint}\n              metric={metric}\n              metricBounds={metricBounds[metric]}\n              delPlot={() => delPlot(metric)}\n              data={data}\n            />\n          ))}\n          {!plots.length && (\n            <h4 className='app-container__no-plots'>Add some plots!</h4>\n          )}\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = ({\n  dataSet: {\n    plots,\n    selectedDataSet,\n    metricBounds,\n    data,\n    savedDataSets,\n    selectedPoint,\n    focusedPoint\n  },\n  userConfig\n}) => ({\n  plots,\n  selectedDataSet,\n  metricBounds,\n  data,\n  savedDataSets,\n  selectedPoint,\n  focusedPoint,\n  userConfig\n})\n\nconst mapDispatchToProps = dispatch => ({\n  delPlot: metric => {\n    dispatch(delPlot(metric))\n  },\n  saveDataSet: (name, data) => {\n    dispatch(saveDataSet(name, data))\n  },\n  setDataSet: data => {\n    dispatch(setDataSet(data))\n  },\n  selectPoint: point => {\n    dispatch(selectPoint(point))\n  },\n  focusPoint: point => {\n    dispatch(focusPoint(point))\n  }\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","import actions from './actions';\n\nexport const initialUserConfig = {\n    colors: {\n        primary: '#ffee10'\n    }\n}\n\nexport default (state=initialUserConfig, action) => {\n    switch (action.type) {\n        case actions.PRIMARY_COLOR_CHANGE:\n            return {\n                ...state,\n                colors: {\n                    ...state.colors,\n                    primary: action.data,\n                }\n            };\n        default:\n            return state;\n    }\n}","const storage = window.localStorage;\n\nexport const getData = name => JSON.parse(storage.getItem(name));\n\nexport const saveData = (name, data) => {\n    storage.setItem(\n        name,\n        JSON.stringify(data)\n    );\n};\n\nexport const deleteData = name => storage.removeItem(name);\n","import {\n    max as d3Max,\n    min as d3Min\n} from 'd3';\nimport {\n    getData,\n    saveData,\n    deleteData,\n} from '../my-utils/dataSetAPI';\n\nimport actions from './actions';\n\nexport const initialDataSet = {\n    data: [],\n    plots: [],\n    savedDataSets: [],\n    selectedDataSet: '',\n    selectedPoint: {},\n    focusedPoint:  {},\n    validMetrics: [],\n    metricBounds: {},\n};\n\nexport default (state=initialDataSet, action) => {\n    switch (action.type) {\n        // POINT STUFF\n        case actions.SELECT_POINT:\n            return {\n                ...state,\n                selectedPoint: action.data\n            };\n        case actions.FOCUS_POINT:\n            return {\n                ...state,\n                focusedPoint: action.data\n            };\n        case actions.UPDATE_METRIC_BOUNDS:\n            return {\n                ...state,\n                metricBounds: {\n                    ...state.metricBounds,\n                    [action.data.metric]: action.data.bounds\n                }\n            };\n        // PLOT STUFF\n        case actions.ADD_PLOT:\n            return {\n                ...state,\n                plots: state.plots.indexOf(action.data) === -1 ?\n                    [...state.plots, action.data] :\n                    [...state.plots]\n            };\n        case actions.DEL_PLOT:\n            return {\n                ...state,\n                plots: state.plots.filter( plot => plot !== action.data )\n            };\n        // DATA SET STUFF\n        case actions.SAVE_DATA_SET:\n            saveData(action.data.name, action.data.data);\n            return {\n                ...state,\n                savedDataSets: [...state.savedDataSets, action.data.name]\n            };\n        case actions.DEL_DATA_SET:\n            deleteData(action.data);\n            return {\n                ...state,\n                savedDataSets: state.savedDataSets.filter( dataSet => dataSet !== action.data )\n            };\n        case actions.SET_DATA_SET:\n            const data = getData(action.data);\n            const plots = Object\n                .keys(data[0])\n                .filter( key => !isNaN(+data[0][key]) && data[0][key] !== '');\n            return {\n                ...state,\n                data,\n                selectedDataSet: action.data,\n                selectedPoint: data[0],\n                focusedPoint: data[0],\n                validMetrics: plots,\n                metricBounds: plots.reduce( (acc,metric) => ({\n                    ...acc,\n                    [metric]: {\n                        upperBound: d3Max(data, d => Math.round(d[metric])),\n                        lowerBound: d3Min(data, d => Math.round(d[metric]))\n                    }\n                }), {}),\n                plots\n            };\n        default:\n            return state;\n    }\n}\n","import actions from './actions';\nimport userConfigReducer, { initialUserConfig } from './userConfig';\nimport dataSetReducer, { initialDataSet } from './dataSet';\n\nexport const initialState = {\n  loading: false,\n  mode: 'viewDetails',\n  configOpen: false,\n  userConfig: initialUserConfig,\n  dataSet: initialDataSet,\n  __version: 2\n};\n\nexport default (state=initialState, action) => {\n  const { data } = action;\n  switch (action.type) {\n    case actions.SET_MODE:\n      return {\n        ...state,\n        mode: data\n      };\n    case actions.SHOW_CONFIG:\n      return {\n        ...state,\n        configOpen: data\n      }\n    case actions.PRIMARY_COLOR_CHANGE:\n    case actions.UPDATE_PRIMARY_COLOR_DEFAULT:\n      return {\n        ...state,\n        userConfig: userConfigReducer(state.userConfig, action)\n      };\n    case actions.UPDATE_METRIC_BOUNDS:\n    case actions.SELECT_POINT:\n    case actions.FOCUS_POINT:\n    case actions.SAVE_DATA_SET:\n    case actions.SET_DATA_SET:\n    case actions.DEL_DATA_SET:\n    case actions.DEL_PLOT:\n    case actions.ADD_PLOT:\n      return {\n        ...state,\n        dataSet: dataSetReducer(state.dataSet, action)\n      };\n    default:\n      return state;\n  }\n};\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { initialUserConfig } from '../reducers/userConfig';\n\nconst migrate = store => {\n    switch (store.__version) {\n        case 0: store = addUserConfig(store); /* falls through */\n        case 1: store = isolateDataSetData(store); /* falls through */\n        default:\n            return store;\n    }\n}\n\nconst addUserConfig = store => Object.assign({}, store, {\n    userConfig: initialUserConfig,\n    __version: 1\n});\n\nconst isolateDataSetData = ({\n    loading,\n    mode,\n    validMetrics,\n    plots,\n    selectedPoint,\n    focusedPoint,\n    chartData,\n    metricBounds,\n    configOpen,\n    userConfig,\n}) => {\n    const localStorageKey = 'savedDataSets';\n    const savedDataSetsLS = JSON.parse(window.localStorage.getItem(localStorageKey)) || {};\n    window.localStorage.removeItem(localStorageKey);\n    const savedDataSets = Object\n        .keys(savedDataSetsLS)\n        .reduce( (acc, key) => {\n            return savedDataSetsLS[key] ?\n                [...acc, key] :\n                [...acc];\n        }, [])\n    const selectedDataSet = savedDataSets.length > 0 ?\n        savedDataSets[0] :\n        chartData.length > 0 ?\n            'Unknown Data Set' :\n            '';\n    return {\n        loading,\n        mode,\n        configOpen,\n        userConfig,\n        dataSet: {\n            data: chartData,\n            plots,\n            savedDataSets,\n            selectedDataSet,\n            selectedPoint,\n            focusedPoint,\n            validMetrics,\n            metricBounds,\n        },\n        __version: 2\n    }\n};\n\nexport default migrate;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport './index.css';\nimport App from './App';\nimport mainReducer from './reducers';\nimport registerServiceWorker from './registerServiceWorker';\nimport migrate from './migrations';\n\n// TODO:\n// ◼ Add theme provider\n// ◼ refactor css\n// ◼ make into easily reusable component\n// ◼ publish in npm\n// ◼ storybook\n// ◼ publish storybook\n// ◼ unit tests\n// ◼ eslint/prettier js on save\n\nconst localStorageMiddleWare = ({getState}) => {\n    return next => action => {\n        const result = next(action);\n        localStorage.setItem('reduxState', JSON.stringify(getState()))\n        return result;\n    };\n};\n\nconst reHydrateStore = () => {\n    if (localStorage.getItem('reduxState') !== null) {\n        const savedStore = JSON.parse(localStorage.getItem('reduxState'));\n        return migrate(savedStore);\n    } \n};\n\nconst store = createStore(\n    mainReducer,\n    reHydrateStore(),\n    applyMiddleware(localStorageMiddleWare)\n);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}