{"version":3,"sources":["my-utils/Loading.js","PointViewer.js","my-utils/csvParser.js","DataUploader.js","inputs/IconButton/IconButton.js","SavedData.js","inputs/RangeInput/RangeInput.js","FilterData.js","PlotAdder.js","inputs/CircleButton/CircleButton.js","ActionSelector.js","reducers/actions.js","JCtrl.js","my-utils/Axis.js","Point.js","JPlot.js","App.js","my-utils/dataSetAPI.js","reducers/dataSet.js","reducers/index.js","registerServiceWorker.js","index.js"],"names":["message","PointViewer","selectedPoint","keys","Object","className","map","key","lineParser","acc","curr","lineNumber","line","split","headers","datum","forEach","entry","index","result","push","VALID_TYPES","extension","types","parseData","contents","type","JSON","parse","e","reduce","csvParser","saveDataSet","setChartData","multiple","onChange","target","files","call","file","idx","fileName","name","reader","FileReader","some","search","indexOf","isValidFileType","onload","data","readAsText","IconButton","icon","size","rest","style","width","height","lineHeight","fontSize","savedDataSets","deleteDataSet","savedData","onClick","DataUploader","RangeInput","min","max","lowerBound","upperBound","step","Math","round","resizerWidth","scale","startWidth","endWidth","middleWidth","React","useState","dragging","setDragging","startDrag","control","start","clientX","pxValue","parentElement","getBoundingClientRect","useEffect","moveListener","unitsMoved","newValue","window","addEventListener","mouseUpListener","removeEventListener","value","flexBasis","onMouseDown","plots","metrics","metricBounds","updateMetricBounds","optionsMap","metric","newBounds","makeId","str","replace","normalize","PlotAdder","selectedMetrics","delPlot","addPlot","listStyle","paddingLeft","padding","id","checked","includes","htmlFor","CircleButton","isActive","fontIcon","aria-hidden","USER_ACTIONS","ActionSelector","action","setAction","actions","ADD_PLOT","DEL_PLOT","SELECT_POINT","FOCUS_POINT","UPDATE_METRIC_BOUNDS","SAVE_DATA_SET","SET_DATA_SET","DEL_DATA_SET","setDataSet","selectPoint","point","focusPoint","Header","validMetrics","getAgentOnChange","first_name","event","Action","loading","mode","focusedPoint","Loading","SavedData","FilterData","connect","dataSet","userConfig","dispatch","bounds","props","setMode","Axis","Component","componentDidUpdate","this","renderAxis","componentDidMount","node","ReactDOM","findDOMNode","d3Select","axis","render","stroke","transform","Point","constructor","super","state","isHover","cx","randX","getOpacity","opacity","isFocusedPoint","isSelectedPoint","hoverMenu","setState","radius","plotWidth","floor","random","getFill","isOutOfRange","colors","selected","selectedDisabled","enabled","disabled","getStroke","getStrokeWidth","cy","r","bmi","fillOpacity","strokeWidth","onMouseEnter","onMouseLeave","onPointClick","fill","config","margin","top","side","svgStyle","borderTop","borderBottom","offset","innerHeight","JitterPlot","d3Max","d","d3Min","yScale","d3ScaleLinear","domain","range","d3ScaleTime","getY","val","renderFooter","selectedPointId","spIdx","sort","a","b","currentId","position","length","percentile","hasData","renderHeader","renderBody","tickValues","yAxis","d3AxisRight","person","defaultProps","App","chartData","SAMPLE_SETS","src","fetch","then","raw","json","drillIntoPoint","console","log","selectedDataSet","JPlot","storage","localStorage","initialDataSet","filter","plot","setItem","stringify","saveData","removeItem","getItem","getData","isNaN","initialState","configOpen","__version","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","store","createStore","dataSetReducer","reHydrateStore","applyMiddleware","getState","next","document","getElementById","URL","process","origin","response","status","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.4d54835e.chunk.js","sourcesContent":["import React from 'react';\n\nexport default (message='Loading') => {\n    return (\n        <h1>{message}</h1>\n    );\n};\n","import React from 'react';\nimport './PointViewer.scss';\n\nconst PointViewer = ({ selectedPoint }) => {\n  const keys = Object.keys(selectedPoint);\n  return (\n    <div className='point-card'>\n      {keys.map(key => (\n        <div key={key}>{`${key}: ${selectedPoint[key]}`}</div>\n      ))}\n    </div>\n  );\n};\n\nexport default PointViewer;\n","const lineParser = (acc, curr, lineNumber) => {\n    const line = curr.split(',');\n    if (lineNumber === 0) {\n        acc.headers = line;\n    } else {\n        const datum = {};\n        line.forEach( (entry,index) => {\n            datum[acc.headers[index]] = entry;\n        });\n        acc.result.push(datum)\n    }\n    return acc;\n};\n\nexport default (contents='') =>\n    contents\n        .split(/[\\r\\n]+/g)\n        .reduce(lineParser, { headers: [], result: [] })\n        .result;\n","import React from 'react';\n\nimport csvParser from './my-utils/csvParser';\n\nconst VALID_TYPES = [{\n    extension: '.json',\n    types: ['application/json']\n},{\n    extension: '.csv',\n    types: ['text/csv', 'application/vnd.ms-excel']\n}];\n\nconst isValidFileType = ({\n    name,\n    type\n}) => VALID_TYPES.some( ({\n    extension,\n    types\n}) =>\n    name.search(`${extension}$`) !== -1 && types.indexOf(type) !== -1\n);\n\nconst parseData = (contents,type) => {\n    switch (type) {\n        case 'application/json':\n            try {\n                return JSON.parse(contents);\n            } catch (e) {\n                return false;\n            }\n        case 'text/csv':\n        case 'application/vnd.ms-excel':\n            try {\n                return csvParser(contents);\n            } catch (e) {\n                return false;\n            }\n        default:\n            return false;\n    }\n};\n\nexport default ({\n    saveDataSet,\n    setChartData,\n}) => <div>\n    <h3>Upload Data</h3>\n    <input\n        type='file'\n        multiple\n        onChange={ ({target: { files } }) => {\n            [].forEach.call(files, (file,idx) => {\n                const fileName = file.name;\n                const reader = new FileReader();\n                if (isValidFileType(file)) {\n                    reader.onload = ({target: { result }}) => {\n                        const data = parseData(result, file.type);\n                        if (data === false) {\n                            // TODO: handle bad data type\n                        } else {\n                            saveDataSet(fileName, data);\n                            if (idx === 0) {\n                                setChartData(fileName);\n                            }\n                        }\n                    };\n                    reader.readAsText(file);\n                } else {\n                    //TODO: handle bad file type\n                }\n            });\n        }}\n        name=\"chartData\" />\n</div>\n","import React from \"react\"\nimport \"./iconButton.scss\"\n\nexport default function IconButton({ icon, size = 20, ...rest }) {\n  return (\n    <i\n      {...rest}\n      className={`fa fa-${icon} icon-button`}\n      style={{\n        width: `${size}px`,\n        height: `${size}px`,\n        lineHeight: `${size}px`,\n        fontSize: `${size}px`\n      }}\n    ></i>\n  )\n}\n","import React from \"react\"\nimport DataUploader from \"./DataUploader\"\nimport IconButton from \"./inputs/IconButton/IconButton\"\nimport \"./savedData.scss\"\n\nexport default ({\n  // state\n  savedDataSets,\n  // actions\n  saveDataSet,\n  setChartData,\n  deleteDataSet\n}) => (\n  <div>\n    <h3>Saved Data</h3>\n    <ul>\n      {savedDataSets.map(savedData => (\n        <li className='saved-data-set' key={savedData}>\n          {/* TODO: radio inputs here, with htmlFor props on span(which should be label) */}\n          <span\n            className='saved-data-set__title'\n            onClick={() => setChartData(savedData)}\n          >\n            {savedData}\n          </span>\n          <span onClick={() => deleteDataSet(savedData)}>\n            <IconButton icon='times-circle' />\n          </span>\n        </li>\n      ))}\n    </ul>\n    <DataUploader saveDataSet={saveDataSet} setChartData={setChartData} />\n  </div>\n)\n","import React from \"react\"\nimport \"./rangeInput.scss\"\n\nconst MIN = \"MIN\"\nconst MAX = \"MAX\"\n\nexport default function RangeInput({\n  min,\n  max,\n  lowerBound,\n  upperBound,\n  onChange,\n  step = Math.round((max - min) / 10),\n  resizerWidth = 10\n}) {\n  const scale = 100 / (max - min)\n  const startWidth = (lowerBound - min) * scale\n  const endWidth = (max - upperBound) * scale\n  const middleWidth = (upperBound - lowerBound) * scale\n  const [dragging, setDragging] = React.useState(false)\n\n  function startDrag(control, e) {\n    setDragging({\n      control,\n      start: e.clientX,\n      pxValue:\n        (+max - +min) / e.target.parentElement.getBoundingClientRect().width\n    })\n  }\n\n  React.useEffect(() => {\n    if (dragging && dragging.start) {\n      function moveListener(e) {\n        const distanceMoved = -1 * (dragging.start - +e.clientX)\n        const unitsMoved = distanceMoved * dragging.pxValue\n\n        const newValue =\n          dragging.control === MIN\n            ? {\n                upperBound,\n                lowerBound: Math.min(\n                  Math.max(min, lowerBound + unitsMoved),\n                  upperBound\n                )\n              }\n            : {\n                lowerBound,\n                upperBound: Math.max(\n                  Math.min(max, upperBound + unitsMoved),\n                  lowerBound\n                )\n              }\n\n        onChange(newValue)\n      }\n      function mouseUpListener(e) {\n        setDragging(null)\n        window.removeEventListener(\"mousemove\", moveListener)\n        window.removeEventListener(\"mouseup\", mouseUpListener)\n      }\n      window.addEventListener(\"mousemove\", moveListener)\n      window.addEventListener(\"mouseup\", mouseUpListener)\n    }\n  }, [dragging])\n\n  return (\n    <div className='range__container'>\n      <div className='range__inputs'>\n        <input\n          type='number'\n          onChange={e =>\n            onChange({\n              lowerBound: +e.target.value,\n              upperBound\n            })\n          }\n          step={step}\n          value={lowerBound}\n          max={Math.min(max, upperBound)}\n          min={min}\n        />\n        <input\n          type='number'\n          onChange={e =>\n            onChange({\n              upperBound: +e.target.value,\n              lowerBound\n            })\n          }\n          step={step}\n          value={upperBound}\n          max={max}\n          min={Math.max(min, lowerBound)}\n        />\n      </div>\n      <div className='range__slider'>\n        <div\n          className='range__chunk range__chunk--start'\n          style={{ flexBasis: `${startWidth}%` }}\n        ></div>\n        <div\n          className='range__control'\n          onMouseDown={e => startDrag(MIN, e)}\n          style={{ flexBasis: `${resizerWidth}px` }}\n        ></div>\n        <div\n          className='range__chunk range__chunk--middle'\n          style={{ flexBasis: `calc(${middleWidth}% - ${2 * resizerWidth}px` }}\n        ></div>\n        <div\n          className='range__control'\n          onMouseDown={e => startDrag(MAX, e)}\n          style={{ flexBasis: `${resizerWidth}px` }}\n        ></div>\n        <div\n          className='range__chunk range__chunk--end'\n          style={{ flexBasis: `${endWidth}%` }}\n        ></div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react';\nimport RangeInput from './inputs/RangeInput/RangeInput';\n\nexport default ({\n    data,\n    plots: metrics,\n    metricBounds,\n    updateMetricBounds\n}) => {\n    const optionsMap = {};\n    data.forEach( datum => {\n        metrics.forEach( metric => {\n            if (!optionsMap[metric]) {\n                optionsMap[metric] = {\n                    min: datum[metric],\n                    max: datum[metric]\n                };\n            } else if (datum[metric] < optionsMap[metric].min) {\n                optionsMap[metric].min = datum[metric];\n            } else if (datum[metric] > optionsMap[metric].max) {\n                optionsMap[metric].max = datum[metric];\n            }\n        });\n    });\n    return <div>\n        <h2>Filter Data</h2>\n        {metrics.map( metric => <div key={metric}>\n            <label>{`${metric} : ${optionsMap[metric].min} - ${optionsMap[metric].max}`}</label><br/>\n            <RangeInput\n                min={optionsMap[metric].min}\n                max={optionsMap[metric].max}\n                lowerBound={metricBounds[metric].lowerBound}\n                upperBound={metricBounds[metric].upperBound}\n                onChange={ newBounds => updateMetricBounds(metric, newBounds)}\n            />\n        </div>)}\n    </div>\n};\n","import React from \"react\"\n\nfunction normalize(str) {\n  return str.replace(/\\W/, \"-\")\n}\n\nfunction makeId(str) {\n  return normalize(`plot-${str}`)\n}\n\nexport default function PlotAdder({\n  metrics,\n  selectedMetrics,\n  delPlot,\n  addPlot\n}) {\n  return (\n    <>\n      <h3>Metrics</h3>\n      <ul style={{ listStyle: \"none\", paddingLeft: 0 }}>\n        {metrics.map(metric => (\n          <li key={metric} style={{ padding: 10 }}>\n            <input\n              type='checkbox'\n              name={makeId(metric)}\n              id={makeId(metric)}\n              checked={selectedMetrics.includes(metric)}\n              onChange={e =>\n                e.target.checked ? addPlot(metric) : delPlot(metric)\n              }\n            />\n            <label htmlFor={makeId(metric)}>{metric}</label>\n          </li>\n        ))}\n      </ul>\n    </>\n  )\n}\n","import React from \"react\"\nimport \"./circleButton.scss\"\n\nexport default function CircleButton({\n  onClick,\n  isActive,\n  fontIcon = \"circle\"\n}) {\n  return (\n    <button className='circle-button' onClick={onClick}>\n      <span className={isActive ? \"active\" : \"\"}>\n        <i className={`fa fa-${fontIcon}`} aria-hidden='true'></i>\n      </span>\n    </button>\n  )\n}\n","import React from \"react\"\nimport CircleButton from \"./inputs/CircleButton/CircleButton\"\n\nexport const USER_ACTIONS = {\n  VIEW_SAVED: \"viewSaved\",\n  VIEW_DETAILS: \"viewDetails\",\n  ADD_PLOT: \"addPlot\",\n  FILTER_DATA: \"filterData\"\n}\n\nexport default function ActionSelector({ action, setAction }) {\n  return (\n    <div className='actionSelector'>\n      <CircleButton\n        onClick={() => setAction(USER_ACTIONS.FILTER_DATA)}\n        isActive={action === USER_ACTIONS.FILTER_DATA}\n        fontIcon='filter'\n      />\n      <CircleButton\n        onClick={() => setAction(USER_ACTIONS.VIEW_SAVED)}\n        isActive={action === USER_ACTIONS.VIEW_SAVED}\n        fontIcon='floppy-o'\n      />\n      <CircleButton\n        onClick={() => setAction(USER_ACTIONS.VIEW_DETAILS)}\n        isActive={action === USER_ACTIONS.VIEW_DETAILS}\n        fontIcon='id-card'\n      />\n      <CircleButton\n        onClick={() => setAction(USER_ACTIONS.ADD_PLOT)}\n        isActive={action === USER_ACTIONS.ADD_PLOT}\n        fontIcon='plus'\n      />\n    </div>\n  )\n}\n","const actions = {\n  ADD_PLOT: \"ADD_PLOT\",\n  DEL_PLOT: \"DEL_PLOT\",\n  SELECT_POINT: \"SELECT_POINT\",\n  FOCUS_POINT: \"FOCUS_POINT\",\n  UPDATE_METRIC_BOUNDS: \"UPDATE_METRIC_BOUNDS\",\n  // data set actions\n  SAVE_DATA_SET: \"SAVE_DATA_SET\",\n  SET_DATA_SET: \"SET_DATA_SET\",\n  DEL_DATA_SET: \"DEL_DATA_SET\"\n}\n\nexport const addPlot = metric => ({\n  type: actions.ADD_PLOT,\n  data: metric\n})\n\nexport const delPlot = field => ({\n  type: actions.DEL_PLOT,\n  data: field\n})\n\nexport const saveDataSet = (name, data) => ({\n  type: actions.SAVE_DATA_SET,\n  data: {\n    name,\n    data\n  }\n})\n\nexport const deleteDataSet = dataSet => ({\n  type: actions.DEL_DATA_SET,\n  data: dataSet\n})\n\nexport const setDataSet = data => ({\n  type: actions.SET_DATA_SET,\n  data\n})\n\nexport const selectPoint = point => ({\n  type: actions.SELECT_POINT,\n  data: point\n})\n\nexport const focusPoint = point => ({\n  type: actions.FOCUS_POINT,\n  data: point\n})\n\nexport const updateMetricBounds = (metric, data) => ({\n  type: actions.UPDATE_METRIC_BOUNDS,\n  data: {\n    bounds: data,\n    metric\n  }\n})\n\nexport default actions\n","import React from \"react\"\n\nimport Loading from \"./my-utils/Loading\"\nimport PointViewer from \"./PointViewer\"\nimport SavedData from \"./SavedData\"\nimport FilterData from \"./FilterData\"\nimport PlotAdder from \"./PlotAdder\"\nimport ActionSelector, { USER_ACTIONS } from \"./ActionSelector\"\nimport \"./j-ctrl.scss\"\n\nimport { connect } from \"react-redux\"\nimport {\n  addPlot,\n  delPlot,\n  saveDataSet,\n  setDataSet,\n  deleteDataSet,\n  selectPoint,\n  focusPoint,\n  updateMetricBounds\n} from \"./reducers/actions\"\n\nfunction JCtrl(props) {\n  const [mode, setMode] = React.useState(USER_ACTIONS.ADD_PLOT)\n  return (\n    <div className='jp-ctrl'>\n      <Header {...props} />\n      <hr />\n      <div className='jp-ctrl__body'>\n        <Action {...props} mode={mode} />\n      </div>\n      <ActionSelector action={mode} setAction={setMode} />\n    </div>\n  )\n}\n\nfunction Header({ selectedPoint, selectPoint, data, validMetrics }) {\n  return (\n    <div className='jp-ctrl__header'>\n      <label htmlFor='agent'>Agent</label>\n      <select\n        name='agent'\n        value={selectedPoint && selectedPoint.id}\n        onChange={getAgentOnChange(data, selectPoint)}\n      >\n        {data.map(point => (\n          <option key={point.id} value={point.id}>\n            {point.name || point.first_name || point[validMetrics[0]]}\n          </option>\n        ))}\n      </select>\n    </div>\n  )\n}\n\nconst getAgentOnChange = (data, selectPoint) => event => {\n  const id = +event.target.value\n  let point\n  data.some(data => {\n    if (data.id === id) {\n      point = data\n    }\n    return point\n  })\n  selectPoint(point)\n}\n\nfunction Action({\n  loading,\n  mode,\n  validMetrics,\n  addPlot,\n  delPlot,\n  deleteDataSet,\n  saveDataSet,\n  setDataSet,\n  data,\n  savedDataSets,\n  metricBounds,\n  updateMetricBounds,\n  focusedPoint,\n  selectedPoint,\n  plots\n}) {\n  if (loading) {\n    return <Loading />\n  }\n\n  switch (mode) {\n    case USER_ACTIONS.ADD_PLOT:\n      return (\n        <PlotAdder\n          metrics={validMetrics}\n          selectedMetrics={plots}\n          addPlot={addPlot}\n          delPlot={delPlot}\n        />\n      )\n    case USER_ACTIONS.VIEW_SAVED:\n      return (\n        <SavedData\n          savedDataSets={savedDataSets}\n          saveDataSet={saveDataSet}\n          deleteDataSet={deleteDataSet}\n          setChartData={setDataSet}\n        />\n      )\n    case USER_ACTIONS.FILTER_DATA:\n      return (\n        <FilterData\n          data={data}\n          plots={plots}\n          metricBounds={metricBounds}\n          updateMetricBounds={updateMetricBounds}\n        />\n      )\n    case USER_ACTIONS.VIEW_DETAILS:\n      return (\n        <PointViewer\n          focusedPoint={focusedPoint}\n          selectedPoint={selectedPoint}\n        />\n      )\n    default:\n      return <div>Unknown mode</div>\n  }\n}\n\nconst mapStateToProps = ({\n  dataSet: {\n    plots,\n    validMetrics,\n    data,\n    selectedPoint,\n    focusedPoint,\n    metricBounds,\n    savedDataSets\n  },\n  loading,\n  userConfig\n}) => ({\n  plots,\n  validMetrics,\n  metricBounds,\n  savedDataSets,\n  data,\n  selectedPoint,\n  focusedPoint,\n  loading,\n  userConfig\n})\n\nconst mapDispatchToProps = dispatch => ({\n  addPlot: metric => {\n    dispatch(addPlot(metric))\n  },\n  delPlot: metric => {\n    dispatch(delPlot(metric))\n  },\n  saveDataSet: (name, data) => {\n    dispatch(saveDataSet(name, data))\n  },\n  setDataSet: data => {\n    dispatch(setDataSet(data))\n  },\n  deleteDataSet: dataSet => {\n    dispatch(deleteDataSet(dataSet))\n  },\n  selectPoint: point => {\n    dispatch(selectPoint(point))\n  },\n  focusPoint: point => {\n    dispatch(focusPoint(point))\n  },\n  updateMetricBounds: (metric, data) => {\n    dispatch(updateMetricBounds(metric, data))\n  }\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(JCtrl)\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { select  as d3Select } from 'd3';\n\nclass Axis extends Component {\n  componentDidUpdate() {\n    this.renderAxis();\n  }\n  componentDidMount() {\n    this.renderAxis();\n  }\n  renderAxis() {\n    var node = ReactDOM.findDOMNode(this);\n    d3Select(node)\n      .call(this.props.axis);\n  }\n  render() {\n    return (\n      <g\n        className='axis gray-stroke'\n        stroke='grey'\n        transform={'translate(0, 0)'}>\n      </g>\n    );\n  }\n}\n\nexport default Axis;\n","import React, { Component } from \"react\"\n\nclass Point extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      isHover: false,\n      cx: this.randX()\n    }\n  }\n\n  getOpacity() {\n    let opacity\n    if (this.props.isFocusedPoint || (this.state && this.state.isHover)) {\n      opacity = 1\n    } else if (this.props.isSelectedPoint) {\n      opacity = 0.8\n    } else {\n      opacity = 0.6\n    }\n    return opacity\n  }\n\n  hoverMenu(isHover) {\n    this.setState({\n      isHover\n    })\n  }\n\n  randX() {\n    const { isSelectedPoint, radius, plotWidth } = this.props\n    if (isSelectedPoint) {\n      return 150\n    } else {\n      return Math.floor(Math.random() * (plotWidth - radius / 2)) + radius / 2\n    }\n  }\n\n  getFill() {\n    const {\n      isOutOfRange,\n      isSelectedPoint,\n      colors: {\n        selected = \"#ffee10\",\n        selectedDisabled = \"#d5dc7e\",\n        enabled = \"#4285f4\",\n        disabled = \"lightgray\"\n      } = {}\n    } = this.props\n\n    if (isOutOfRange) {\n      if (isSelectedPoint) {\n        return selectedDisabled\n      } else {\n        return disabled\n      }\n    } else {\n      if (isSelectedPoint) {\n        return selected\n      } else {\n        return enabled\n      }\n    }\n  }\n\n  getStroke() {\n    let stroke\n    if (this.props.isFocusedPoint) {\n      stroke = \"white\"\n    } else if (this.state.isHover) {\n      stroke = \"black\"\n    }\n    return stroke\n  }\n\n  getStrokeWidth() {\n    if (this.props.isFocusedPoint || this.state.isHover) {\n      return 1\n    }\n  }\n\n  render() {\n    return (\n      <circle\n        cx={this.state.cx}\n        cy={this.props.cy}\n        r={this.props.radius}\n        data={this.props.data.bmi}\n        fillOpacity={this.getOpacity()}\n        stroke={this.getStroke()}\n        strokeWidth={this.getStrokeWidth()}\n        onMouseEnter={e => this.hoverMenu(true)}\n        onMouseLeave={e => this.hoverMenu(false)}\n        onClick={() => this.props.onPointClick()}\n        fill={this.getFill()}\n      />\n    )\n  }\n}\n\nexport default Point\n","import React, { Component } from \"react\"\nimport PropTypes from \"prop-types\"\nimport Axis from \"./my-utils/Axis\"\nimport Point from \"./Point\"\nimport {\n  max as d3Max,\n  min as d3Min,\n  scaleLinear as d3ScaleLinear,\n  scaleTime as d3ScaleTime,\n  axisRight as d3AxisRight\n} from \"d3\"\nimport \"./j-plot.scss\"\n\nconst plotHeight = [\n  30, // dashboardTitle\n  25, // plotTitle\n  100, // plotFooter\n  132 // fudge factor\n].reduce((height, offset) => height - offset, window.innerHeight)\n\nconst config = {\n  radius: 10,\n  margin: {\n    top: 10,\n    side: 10\n  },\n  svgStyle: {\n    padding: \"10px\",\n    borderTop: \"2px solid\",\n    borderBottom: \"2px solid\"\n  },\n  height: plotHeight,\n  width: 300\n}\n\nclass JitterPlot extends Component {\n  constructor(props) {\n    super(props)\n\n    // set state\n    const { metric, data } = this.props\n    const max = d3Max(data, d => Math.round(d[metric]))\n    const min = d3Min(data, d => Math.round(d[metric]))\n    let yScale = d3ScaleLinear()\n      .domain([min, max])\n      .range([config.height - config.margin.top, 0])\n\n    if (metric.includes(\"date\") || metric.includes(\"day\")) {\n      yScale = d3ScaleTime().range([config.height - config.margin.top, min])\n    }\n\n    this.state = {\n      yScale,\n      max,\n      min\n    }\n  }\n\n  getY(val) {\n    return this.state.yScale(val)\n  }\n\n  isSelectedPoint({ id }) {\n    return this.props.selectedPoint.id === id\n  }\n\n  renderFooter() {\n    const {\n      selectedPoint: { id: selectedPointId },\n      data,\n      metric\n    } = this.props\n\n    let spIdx = -1\n    data\n      .sort((a, b) => {\n        return Math.round(a[metric]) - Math.round(b[metric])\n      })\n      .some(({ id: currentId }, idx) => {\n        if (currentId === selectedPointId) {\n          spIdx = idx + 1\n        }\n        return spIdx !== -1\n      })\n    const position = `${spIdx} of ${data.length}`\n    const percentile =\n      \"Percentile: \" + Math.round((spIdx / data.length) * 100) + \"%\"\n\n    const hasData = data.length !== 0\n\n    return (\n      <div className='j-plot__footer'>\n        <h3>{hasData ? position : \"\"}</h3>\n        {hasData && <h4>{percentile}</h4>}\n      </div>\n    )\n  }\n\n  renderHeader() {\n    const { metric, data } = this.props\n    return (\n      <h2 className='j-plot__header'>{data.length ? metric : \"No Data\"}</h2>\n    )\n  }\n\n  renderBody() {\n    const {\n      metric,\n      data,\n      metricBounds,\n      focusedPoint,\n      onPointClick\n    } = this.props\n    const { max, min, yScale } = this.state\n\n    const tickValues = [min]\n    if (metricBounds.lowerBound !== min) {\n      tickValues.push(metricBounds.lowerBound)\n    }\n    if (\n      metricBounds.upperBound !== max &&\n      metricBounds.upperBound !== metricBounds.lowerBound\n    ) {\n      tickValues.push(metricBounds.upperBound)\n    }\n    if (metricBounds.lowerBound !== max) {\n      tickValues.push(max)\n    }\n\n    const yAxis = d3AxisRight(yScale).tickValues(tickValues)\n\n    return data.length ? (\n      <svg width={config.width} height={config.height} style={config.svgStyle}>\n        <g>\n          <Axis height={config.height - config.margin.top} axis={yAxis} />\n          {data.map(person => (\n            <Point\n              key={person.id}\n              cy={this.getY(Math.round(person[metric]))}\n              radius={config.radius}\n              isFocusedPoint={focusedPoint === person}\n              isSelectedPoint={this.isSelectedPoint(person)}\n              isOutOfRange={\n                metricBounds.lowerBound > person[metric] ||\n                metricBounds.upperBound < person[metric]\n              }\n              onPointClick={() => onPointClick(person)}\n              plotWidth={config.width}\n              data={person}\n            />\n          ))}\n        </g>\n      </svg>\n    ) : (\n      <div\n        style={{\n          width: config.width,\n          height: config.height\n        }}\n      />\n    )\n  }\n\n  render() {\n    return (\n      <div className='j-plot'>\n        {this.renderHeader()}\n        {this.renderBody()}\n        {this.renderFooter()}\n      </div>\n    )\n  }\n}\n\nJitterPlot.propTypes = {\n  data: PropTypes.array,\n  metric: PropTypes.string,\n  selectedPoint: PropTypes.shape({\n    id: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n  }),\n  metricBounds: PropTypes.shape({\n    upperBound: PropTypes.number,\n    lowerBound: PropTypes.number\n  })\n}\n\nJitterPlot.defaultProps = {\n  data: [],\n  metric: \"\",\n  selectedPoint: {},\n  metricBounds: {}\n}\n\nexport default JitterPlot\n","import React, { Component } from \"react\"\n\nimport JCtrl from \"./JCtrl\"\nimport JPlot from \"./JPlot\"\nimport \"./App.scss\"\nimport { connect } from \"react-redux\"\nimport {\n  setDataSet,\n  selectPoint,\n  focusPoint,\n  saveDataSet\n} from \"./reducers/actions\"\n\nclass App extends Component {\n  componentDidMount() {\n    const {\n      // state\n      data: chartData,\n      savedDataSets,\n      // actions\n      saveDataSet,\n      setDataSet\n    } = this.props\n\n    const SAMPLE_SETS = [\n      { name: \"Random People 1\", src: \"./MOCK_DATA_1.json\" },\n      { name: \"Random People 2\", src: \"./MOCK_DATA_2.json\" },\n      {\n        name: \"Chicago Gas Stations\",\n        src:\n          \"https://data.cityofchicago.org/resource/f7f2-ggz5.json?$limit=100&$offset=100\"\n      }\n    ]\n    if (savedDataSets.length === 0) {\n      SAMPLE_SETS.forEach((dataSet, index) => {\n        fetch(dataSet.src)\n          .then(raw => raw.json())\n          .then(data => {\n            saveDataSet(dataSet.name, data)\n            if (index === 0 && chartData.length === 0) {\n              setDataSet(dataSet.name)\n            }\n          })\n      })\n    }\n  }\n\n  onPointClick(point) {\n    if (point.id === this.props.selectedPoint && this.props.selectedPoint.id) {\n      this.drillIntoPoint(point)\n    } else if (point.id === this.props.focusedPoint.id) {\n      this.props.selectPoint(point)\n    } else {\n      this.props.focusPoint(point)\n    }\n  }\n\n  drillIntoPoint(point) {\n    console.log(\"todo: drill into point\")\n  }\n\n  render() {\n    const {\n      selectedPoint,\n      selectedDataSet,\n      plots,\n      data,\n      metricBounds,\n      focusedPoint\n    } = this.props\n    return (\n      <div className='app-container'>\n        <JCtrl />\n        <div className='app-container__jp-holder'>\n          <h3 className='app-container__jp-title'>{selectedDataSet}</h3>\n          {plots.map((metric, idx) => (\n            <JPlot\n              key={idx + metric}\n              selectedPoint={selectedPoint}\n              onPointClick={point => this.onPointClick(point)}\n              focusedPoint={focusedPoint}\n              metric={metric}\n              metricBounds={metricBounds[metric]}\n              data={data}\n            />\n          ))}\n          {!plots.length && (\n            <h4 className='app-container__no-plots'>Add some plots!</h4>\n          )}\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = ({\n  dataSet: {\n    plots,\n    selectedDataSet,\n    metricBounds,\n    data,\n    savedDataSets,\n    selectedPoint,\n    focusedPoint\n  }\n}) => ({\n  plots,\n  selectedDataSet,\n  metricBounds,\n  data,\n  savedDataSets,\n  selectedPoint,\n  focusedPoint\n})\n\nconst mapDispatchToProps = dispatch => ({\n  saveDataSet: (name, data) => {\n    dispatch(saveDataSet(name, data))\n  },\n  setDataSet: data => {\n    dispatch(setDataSet(data))\n  },\n  selectPoint: point => {\n    dispatch(selectPoint(point))\n  },\n  focusPoint: point => {\n    dispatch(focusPoint(point))\n  }\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","const storage = window.localStorage;\n\nexport const getData = name => JSON.parse(storage.getItem(name));\n\nexport const saveData = (name, data) => {\n    storage.setItem(\n        name,\n        JSON.stringify(data)\n    );\n};\n\nexport const deleteData = name => storage.removeItem(name);\n","import {\n    max as d3Max,\n    min as d3Min\n} from 'd3';\nimport {\n    getData,\n    saveData,\n    deleteData,\n} from '../my-utils/dataSetAPI';\n\nimport actions from './actions';\n\nexport const initialDataSet = {\n    data: [],\n    plots: [],\n    savedDataSets: [],\n    selectedDataSet: '',\n    selectedPoint: {},\n    focusedPoint:  {},\n    validMetrics: [],\n    metricBounds: {},\n};\n\nexport default (state=initialDataSet, action) => {\n    switch (action.type) {\n        // POINT STUFF\n        case actions.SELECT_POINT:\n            return {\n                ...state,\n                selectedPoint: action.data\n            };\n        case actions.FOCUS_POINT:\n            return {\n                ...state,\n                focusedPoint: action.data\n            };\n        case actions.UPDATE_METRIC_BOUNDS:\n            return {\n                ...state,\n                metricBounds: {\n                    ...state.metricBounds,\n                    [action.data.metric]: action.data.bounds\n                }\n            };\n        // PLOT STUFF\n        case actions.ADD_PLOT:\n            return {\n                ...state,\n                plots: state.plots.indexOf(action.data) === -1 ?\n                    [...state.plots, action.data] :\n                    [...state.plots]\n            };\n        case actions.DEL_PLOT:\n            return {\n                ...state,\n                plots: state.plots.filter( plot => plot !== action.data )\n            };\n        // DATA SET STUFF\n        case actions.SAVE_DATA_SET:\n            saveData(action.data.name, action.data.data);\n            return {\n                ...state,\n                savedDataSets: [...state.savedDataSets, action.data.name]\n            };\n        case actions.DEL_DATA_SET:\n            deleteData(action.data);\n            return {\n                ...state,\n                savedDataSets: state.savedDataSets.filter( dataSet => dataSet !== action.data )\n            };\n        case actions.SET_DATA_SET:\n            const data = getData(action.data);\n            const plots = Object\n                .keys(data[0])\n                .filter( key => !isNaN(+data[0][key]) && data[0][key] !== '');\n            return {\n                ...state,\n                data,\n                selectedDataSet: action.data,\n                selectedPoint: data[0],\n                focusedPoint: data[0],\n                validMetrics: plots,\n                metricBounds: plots.reduce( (acc,metric) => ({\n                    ...acc,\n                    [metric]: {\n                        upperBound: d3Max(data, d => Math.round(d[metric])),\n                        lowerBound: d3Min(data, d => Math.round(d[metric]))\n                    }\n                }), {}),\n                plots\n            };\n        default:\n            return state;\n    }\n}\n","import actions from \"./actions\"\nimport dataSetReducer, { initialDataSet } from \"./dataSet\"\n\nexport const initialState = {\n  loading: false,\n  configOpen: false,\n  dataSet: initialDataSet,\n  __version: 2\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case actions.UPDATE_METRIC_BOUNDS:\n    case actions.SELECT_POINT:\n    case actions.FOCUS_POINT:\n    case actions.SAVE_DATA_SET:\n    case actions.SET_DATA_SET:\n    case actions.DEL_DATA_SET:\n    case actions.DEL_PLOT:\n    case actions.ADD_PLOT:\n      return {\n        ...state,\n        dataSet: dataSetReducer(state.dataSet, action)\n      }\n    default:\n      return state\n  }\n}\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { Provider } from \"react-redux\"\nimport { createStore, applyMiddleware } from \"redux\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport mainReducer from \"./reducers\"\nimport registerServiceWorker from \"./registerServiceWorker\"\n\n// TODO:\n// ◼ Add theme provider\n// ◼ refactor css\n// ◼ make into easily reusable component\n// ◼ publish in npm\n// ◼ storybook\n// ◼ publish storybook\n// ◼ unit tests\n// ◼ eslint/prettier js on save\n\nconst localStorageMiddleWare = ({ getState }) => {\n  return next => action => {\n    const result = next(action)\n    localStorage.setItem(\"reduxState\", JSON.stringify(getState()))\n    return result\n  }\n}\n\nconst reHydrateStore = () => {\n  if (localStorage.getItem(\"reduxState\") !== null) {\n    return JSON.parse(localStorage.getItem(\"reduxState\"))\n  }\n}\n\nconst store = createStore(\n  mainReducer,\n  reHydrateStore(),\n  applyMiddleware(localStorageMiddleWare)\n)\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n)\nregisterServiceWorker()\n"],"sourceRoot":""}